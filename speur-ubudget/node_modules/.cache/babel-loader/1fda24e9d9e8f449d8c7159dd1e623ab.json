{"remainingRequest":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/babel-loader/lib/index.js!/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/eslint-loader/index.js??ref--13-0!/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/src/scripts/API.js","dependencies":[{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/src/scripts/API.js","mtime":1622305119927},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90ZXNzYWNqL01vdmllcy9TcGV1ci1CdWRnZXQtV2Vic2l0ZS9TcGV1ci13ZWJzaXRlL3NwZXVyLXVidWRnZXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLyBjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJykuZGVmYXVsdDsKdmFyIGJhc2VfdXJsID0gImh0dHBzOi8vdGVzc2EuYnVkZ2V0YXBpLnNwZXVyaG9sZGluZ3MuY29tIjsKZXhwb3J0IHZhciBwb3N0TG9naW4gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVzciwgcHdkKSB7CiAgICB2YXIgZW5kUG9pbnQsIHVybCwgZGF0YSwgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGVuZFBvaW50ID0gIi9sb2dpbiI7CiAgICAgICAgICAgIHVybCA9IGJhc2VfdXJsICsgZW5kUG9pbnQ7CiAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgZW1haWw6IHVzciwKICAgICAgICAgICAgICBwYXNzd29yZDogcHdkCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsLCB7CiAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJUaGVyZSB3YXMgYW4gZXJyb3I6ICIsIGVycik7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5qc29uKHJlc3BvbnNlKSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHBvc3RMb2dpbihfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKZXhwb3J0IHZhciBwb3N0VXNlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihuYW1lLCBlbWFpbCwgcHdkKSB7CiAgICB2YXIgZW5kUG9pbnQsIHVybCwgZGF0YSwgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBlbmRQb2ludCA9ICIvdXNlcnMiOwogICAgICAgICAgICB1cmwgPSBiYXNlX3VybCArIGVuZFBvaW50OwogICAgICAgICAgICBkYXRhID0gewogICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgZW1haWw6IGVtYWlsLAogICAgICAgICAgICAgIHBhc3N3b3JkOiBwd2QKICAgICAgICAgICAgfTsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsLCB7CiAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJUaGVyZSB3YXMgYW4gZXJyb3I6ICIsIGVycik7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmpzb24ocmVzcG9uc2UpKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBwb3N0VXNlcihfeDMsIF94NCwgX3g1KSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7Ci8vICAgICBtZXRob2Q6ICdQT1NUJywgLy8gKkdFVCwgUE9TVCwgUFVULCBERUxFVEUsIGV0Yy4KLy8gICAgIG1vZGU6ICdjb3JzJywgLy8gbm8tY29ycywgKmNvcnMsIHNhbWUtb3JpZ2luCi8vICAgICBjYWNoZTogJ25vLWNhY2hlJywgLy8gKmRlZmF1bHQsIG5vLWNhY2hlLCByZWxvYWQsIGZvcmNlLWNhY2hlLCBvbmx5LWlmLWNhY2hlZAovLyAgICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbicsIC8vIGluY2x1ZGUsICpzYW1lLW9yaWdpbiwgb21pdAovLyAgICAgaGVhZGVyczogewovLyAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCi8vICAgICAgIC8vICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKLy8gICAgIH0sCi8vICAgICByZWRpcmVjdDogJ2ZvbGxvdycsIC8vIG1hbnVhbCwgKmZvbGxvdywgZXJyb3IKLy8gICAgIHJlZmVycmVyUG9saWN5OiAnbm8tcmVmZXJyZXInLCAvLyBuby1yZWZlcnJlciwgKm5vLXJlZmVycmVyLXdoZW4tZG93bmdyYWRlLCBvcmlnaW4sIG9yaWdpbi13aGVuLWNyb3NzLW9yaWdpbiwgc2FtZS1vcmlnaW4sIHN0cmljdC1vcmlnaW4sIHN0cmljdC1vcmlnaW4td2hlbi1jcm9zcy1vcmlnaW4sIHVuc2FmZS11cmwKLy8gICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpIC8vIGJvZHkgZGF0YSB0eXBlIG11c3QgbWF0Y2ggIkNvbnRlbnQtVHlwZSIgaGVhZGVyCi8vICAgfSk7Ci8vICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsgLy8gcGFyc2VzIEpTT04gcmVzcG9uc2UgaW50byBuYXRpdmUgSmF2YVNjcmlwdCBvYmplY3Rz"},{"version":3,"sources":["/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/src/scripts/API.js"],"names":["base_url","postLogin","usr","pwd","endPoint","url","data","email","password","fetch","method","headers","body","JSON","stringify","catch","err","console","log","response","json","postUser","name"],"mappings":";;;AAAA;AAEA,IAAMA,QAAQ,GAAG,2CAAjB;AAEA,OAAO,IAAMC,SAAS;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,QADe,GACJ,QADI;AAEfC,YAAAA,GAFe,GAETL,QAAQ,GAAGI,QAFF;AAIfE,YAAAA,IAJe,GAIR;AAAEC,cAAAA,KAAK,EAAEL,GAAT;AAAcM,cAAAA,QAAQ,EAAEL;AAAxB,aAJQ;AAAA;AAAA,mBAMEM,KAAK,CAACJ,GAAD,EAAM;AAC9BK,cAAAA,MAAM,EAAE,MADsB;AAE9BC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFqB;AAK9BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALwB,aAAN,CAAL,CAMpBS,KANoB,CAMd,UAACC,GAAD,EAAS;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACH,aARsB,CANF;;AAAA;AAMfG,YAAAA,QANe;AAAA,6CAgBdA,QAAQ,CAACC,IAAT,CAAcD,QAAd,CAhBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATlB,SAAS;AAAA;AAAA;AAAA,GAAf;AAmBP,OAAO,IAAMoB,QAAQ;AAAA,sEAAG,kBAAOC,IAAP,EAAaf,KAAb,EAAoBJ,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,QADc,GACH,QADG;AAEdC,YAAAA,GAFc,GAERL,QAAQ,GAAGI,QAFH;AAIdE,YAAAA,IAJc,GAIP;AAAEgB,cAAAA,IAAI,EAAEA,IAAR;AAAcf,cAAAA,KAAK,EAAEA,KAArB;AAA4BC,cAAAA,QAAQ,EAAEL;AAAtC,aAJO;AAAA;AAAA,mBAMGM,KAAK,CAACJ,GAAD,EAAM;AAC9BK,cAAAA,MAAM,EAAE,MADsB;AAE9BC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFqB;AAK9BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALwB,aAAN,CAAL,CAMpBS,KANoB,CAMd,UAACC,GAAD,EAAS;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACH,aARsB,CANH;;AAAA;AAMdG,YAAAA,QANc;AAAA,8CAgBbA,QAAQ,CAACC,IAAT,CAAcD,QAAd,CAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARE,QAAQ;AAAA;AAAA;AAAA,GAAd,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const axios = require('axios').default;\n\nconst base_url = \"https://tessa.budgetapi.speurholdings.com\";\n\nexport const postLogin = async (usr, pwd) => {\n    const endPoint = \"/login\";\n    const url = base_url + endPoint;\n\n    const data = { email: usr, password: pwd };\n\n    const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).catch((err) => {\n        console.log(\"There was an error: \", err);\n    });\n\n    return response.json(response);\n};\n\nexport const postUser = async (name, email, pwd) => {\n    const endPoint = \"/users\";\n    const url = base_url + endPoint;\n\n    const data = { name: name, email: email, password: pwd };\n\n    const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).catch((err) => {\n        console.log(\"There was an error: \", err);\n    });\n\n    return response.json(response);\n};\n\n// const response = await fetch(url, {\n//     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n//     mode: 'cors', // no-cors, *cors, same-origin\n//     cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n//     credentials: 'same-origin', // include, *same-origin, omit\n//     headers: {\n//       'Content-Type': 'application/json'\n//       // 'Content-Type': 'application/x-www-form-urlencoded',\n//     },\n//     redirect: 'follow', // manual, *follow, error\n//     referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n//     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n//   });\n//   return response.json(); // parses JSON response into native JavaScript objects\n"]}]}