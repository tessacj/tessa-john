{"remainingRequest":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/src/views/Dashboard.vue?vue&type=template&id=22ba47ca&scoped=true&","dependencies":[{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/src/views/Dashboard.vue","mtime":1622330270721},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tessacj/Movies/Speur-Budget-Website/Speur-website/speur-ubudget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}